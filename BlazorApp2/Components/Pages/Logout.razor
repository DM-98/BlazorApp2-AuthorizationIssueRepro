@page "/logout"

@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
	[Parameter, SupplyParameterFromQuery] public string? ReturnUrl { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await ProtectedLocalStorage.DeleteAsync("tokens");

		((JWTAuthStateProvider)AuthenticationStateProvider).NotifyAuthenticationState();

		NavigationManager.NavigateTo(string.IsNullOrWhiteSpace(ReturnUrl) ? "/" : ReturnUrl);
	}
}